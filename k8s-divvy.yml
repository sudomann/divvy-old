# [START kubernetes_deployment]
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: divvy
  namespace: default
  labels:
    app: divvy
spec:
  replicas: 6
  progressDeadlineSeconds: 600
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: divvy
  strategy:
    # To help you understand: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#proportional-scaling
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: divvy
    spec:
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      containers:
      - name: divvy-django
        image: gcr.io/divvy-project-238602/divvy:0.0.2
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8080
          protocol: TCP
        resources: {}

      # [START proxy_container]
      - name: cloudsql-proxy
        image: gcr.io/cloudsql-docker/gce-proxy:1.14
        command: ["/cloud_sql_proxy", "--dir=/cloudsql",
                  "-instances=divvy-project-238602:us-east1:divvy-dev=tcp:5432",
                  "-credential_file=/secrets/cloudsql/credentials.json"]
        volumeMounts:
          - name: cloudsql-oauth-credentials
            mountPath: /secrets/cloudsql
            readOnly: true
          - name: ssl-certs
            mountPath: /etc/ssl/certs
          - name: cloudsql
            mountPath: /cloudsql
      # [END proxy_container]
      # [START volumes]
      volumes:
        - name: cloudsql-oauth-credentials
          secret:
            secretName: cloudsql-oauth-credentials
        - name: ssl-certs
          hostPath:
            path: /etc/ssl/certs
        - name: cloudsql
          emptyDir:
      # [END volumes]        
# [END kubernetes_deployment]
---
apiVersion: v1
kind: Service
metadata:
  name: thedivvyapp-nodeport-service
  labels:
    app: divvy
  namespace: default
spec:
  type: NodePort
  selector:
    app: divvy 
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080